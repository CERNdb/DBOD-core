#!/usr/bin/env perl
# Copyright (C) 2015, CERN
# This software is distributed under the terms of the GNU General Public
# Licence version 3 (GPL Version 3), copied verbatim in the file "LICENSE".
# In applying this license, CERN does not waive the privileges and immunities
# granted to it by virtue of its status as Intergovernmental Organization
# or submit itself to any jurisdiction.


# Extension of the base DBOD::Job class to add extra required parameters
package DBOD::PG::start;
use Moose;

extends 'DBOD::Job';

with 'MooseX::Getopt::Usage',
     'MooseX::Getopt::Usage::Role::Man';

has 'help' => (is => 'ro', isa => 'Bool', documentation => qq{Print command usage} );

# Main 
package main;

use strict;
use warnings;

use Log::Log4perl;
use DBOD::CRS;
use DBOD::PG;

# Initiates logger
BEGIN { 
    Log::Log4perl->easy_init() ;
}


my $job = DBOD::Systems::PG::start->new_with_options();

sub body {

    # Initialize a new PG instance object with the entity details
	my $pg = DBOD::Systems::PG->new(
        instance => $self->entity,
        metadata => $self->metadata,
    );

	$job->log->info('Executing posgresql start-up on '. $job->entity );
	
    my($rc,$entity);

	#Check if instance is running
	if ($pg->is_running()) {
        $job->log->debug("Instance is already up. Nothing to be done.");
        $job->log->debug("pg_start is over.");
        $job->_output(0);
        return 0;
	} else {
        $job->log->debug("No instance running");
	}

	#If instance is CRS
	if ($job->metadata->{'crs_ref'}) {
		$rc = DBOD::Systems::CRS::start_resource($entity, $job->config->{'pg'}->{'oracle_crs'});
	} else {
		$rc = $pg->start();
	}	
	if ($rc) {
		$job->log->debug("Instance is up");
	} else	{
		$job->log->error("Problem starting up instance. Please check.");
		$job->_output(1);
		return 1;
	}

	# The End
	$job->log->debug("pg_start is over.");
	$job->_output(0);
	return 0;	
}

$job->run(\&body);
