#!/usr/bin/env perl
# Copyright (C) 2015, CERN
# This software is distributed under the terms of the GNU General Public
# Licence version 3 (GPL Version 3), copied verbatim in the file "LICENSE".
# In applying this license, CERN does not waive the privileges and immunities
# granted to it by virtue of its status as Intergovernmental Organization
# or submit itself to any jurisdiction.


# Extension of the base DBOD::Job class to add extra required parameters
package DBOD::MySQL::stop;
use Moose;

extends 'DBOD::Job';

with 'MooseX::Getopt::Usage',
     'MooseX::Getopt::Usage::Role::Man';



# Main 
package main;

use strict;
use warnings;

use Log::Log4perl;
use DBOD::Runtime;
use DBOD::MySQL;
use Data::Dumper;


# Initiates logger
BEGIN { 
    Log::Log4perl->easy_init() ;
}


my $job = DBOD::MySQL::stop->new_with_options();
my $runtime = DBOD::Runtime->new;
my $mysql = DBOD::MySQL->new;
my $version_mysql_snap;

sub body {
	$job->log->info('Executing mysql_stop on '. $job->entity );
	
       my($rc,$entity);
	$entity = 'dod_' . $job->entity;	
	
	#Check if instance is running
	$rc=$runtime->RunStr("ps -elf | grep -i datadir=" . $job->metadata->{'datadir'} . " | grep -v grep");

	if ($rc == 0) {
		$job->log->debug("Instance not running");
		$job->log->debug("mysql_stop is over.");
		$job->_output(0);
		return 0;

	} else {
		$job->log->debug("Instance is up.");
	}

	
	#If instance is CRS
	if ($job->metadata->{'crs_ref'}) {
		$rc = $runtime->StopCRSResource($entity, $job->config->{'mysql'}->{'oracle_crs'});
	}
	else {
		$rc = $mysql->StopMySQL($job->metadata->{'bindir'} . "/mysqladmin", $job->config->{'mysql'}->{'db_user'}, $job->config->{'mysql'}->{'db_password'}, $job->metadata->{'socket'});
	}
	if ($rc) {
		$job->log->debug("Instance is down");
	} else	{
		$job->log->error("Problem shutting down instance. Please check.");
		$job->_output(1);
		return 1;
	}

	# The End
	$job->log->debug("mysql_stop is over.");
	$job->_output(0);

	
}

$job->run(\&body);
